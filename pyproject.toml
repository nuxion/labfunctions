[tool.poetry]
name = "labfunctions"
version = "0.8.0-alpha.8"
description = "Schedule parameterized notebooks programmatically using cli or a REST API"
authors = ["nuxion <nuxion@gmail.com>"]
packages = [
   { include = "labfunctions"},
]
license = "Apache-2.0"
readme = "README.md"
homepage = "https://github.com/nuxion/labfunctions"
repository = "https://github.com/nuxion/labfunctions"
documentation = "https://nb-workflows.readthedocs.io/"
keywords = ["papermill", "jupyter", "workflows", "data"]
include = ["LICENSE"]
classifiers = [
	"Environment :: Console",
	"Environment :: Web Environment",
	"Framework :: Jupyter :: JupyterLab",
	"License :: OSI Approved :: Apache Software License",
	"Operating System :: POSIX :: Linux",
	"Topic :: Scientific/Engineering :: Artificial Intelligence"
]


[tool.poetry.scripts]
lab = "labfunctions.cli:cli"

[tool.poetry.dependencies]
python = ">=3.8,<3.10"
# server
uvloop = { version="^0.16.0", optional=true}
sanic = {version="^21.6.2", optional=true}
sanic-openapi = {version="^21.6.1", optional=true}
sanic-ext = { version="^21.9.0", optional= true}
SQLAlchemy = {extras = ["asyncio"], version = "^1.4.26", optional=true}
SQLAlchemy-serializer = { version="^1.4.1", optional=true}
psycopg2-binary = {version="^2.9.1", optional=true}
asyncpg = { version="^0.24.0", optional=true}
alembic = { version="^1.6.5", optional=true}
rq-scheduler = { version="^0.11.0", optional=true }
rq = {version="^1.10.0", optional=true}
# cloud
smart-open = {extras = ["gcs", "s3"], version = "^6.0.0", optional=true}
apache-libcloud = {version="^3.5.1", optional=true}
# both
pytz = "^2021.1"
click = "^8.0.1"
cloudpickle = "^2.0.0"
dateparser = "^1.1.0"
nbconvert = "^6.2.0"
jupytext = "^1.13.0"
loky = "^3.0.0"
aioredis = {extras = ["hiredis"], version = "^2.0.1"}
tqdm = "^4.62.3"
cryptography = "^36.0.1"
httpx = "<0.22.0"
Jinja2 = "^3.0.3"
docker = "^5.0.3"
aiofiles = "^0.8.0"
nanoid = "^2.0.0"
PyYAML = "^6.0"
pydantic = "^1.9.0"
PyJWT = ">=2.1.0,<2.2.0"
ipython = "^8.1.1"
ipykernel = "^6.9.1"
rich = "^12.0.0"
aiosqlite = "^0.17.0"
asyncssh = "^2.10.0"
tenacity = "^8.0.1"
papermill = "^2.3.4"

[tool.poetry.extras]
server = [
	"uvloop",
	"sanic",
	"sanic-openapi",
	"sanic-ext", 
	"sanic-jwt", 
	"SQLAlchemy",
	"SQLAlchemy-serializer",
	"psycopg2-binary",
	"asyncpg", 
	"alembic",
	"rq-scheduler",
	"rq",
]
cloud = [
        "apache-libcloud",
	"smart-open",
]

[tool.poetry.dev-dependencies]
sqlalchemy-stubs = "^0.4"
pylint = "^2.10.2"
isort = "^5.9.3"
autopep8 = "^1.5.7"
matplotlib = "^3.4.3"
seaborn = "^0.11.2"
types-requests = "^2.25.9"
types-redis = "^3.5.11"
openpyxl = "^3.0.9"
types-ujson = "^4.2.0"
types-dateparser = "^1.0.8"
types-pytz = "^2021.3.1"
memory-profiler = "^0.60.0"
pytest-asyncio = "^0.16.0"
filprofiler = "^2021.12.2"
pycallgraph2 = "^1.1.3"
black = "^22.1.0"
Sphinx = "^4.4.0"
sphinx-autobuild = "^2021.3.14"
redislite = "^6.0.674960"
factory-boy = "^3.2.1"
pre-commit = "^2.17.0"
tox = "^3.24.5"
pytest-mock = "^3.7.0"
pytest-cov = "^3.0.0"
sphinx-rtd-theme = "^1.0.0"
invoke = "^1.6.0"
jupyterlab = "^3.3.2"
sanic-testing = "^0.8.2"
pydeps = "^1.10.18"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.jupytext]
formats = "ipynb,py"

[tool.black]
line-length = 88
target-version = [ 'py37', 'py38']
include = '\.pyi?$'

[tool.isort]
profile= "black"
# multi_line_output = 3
# line_length = 88
# include_trailing_comma = true
